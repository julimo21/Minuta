// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minuta.App.Persistencia;

namespace Minuta.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220830200841_Inicial5")]
    partial class Inicial5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Minuta.App.Dominio.Administrador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("adm");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaCorrespondencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("firmaRecibido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personaEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personaRecibe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("residenteid")
                        .HasColumnType("int");

                    b.Property<string>("tipoCorrespondencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("residenteid");

                    b.ToTable("minCor");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaEventos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("anotaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("minEve");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoResidentes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("residenteid")
                        .HasColumnType("int");

                    b.Property<int?>("vehiculoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("residenteid");

                    b.HasIndex("vehiculoid");

                    b.ToTable("minVehRes");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoVisitantes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("numParqueadero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("vehiculoid")
                        .HasColumnType("int");

                    b.Property<int?>("visitanteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("vehiculoid");

                    b.HasIndex("visitanteid");

                    b.ToTable("minVehVis");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVisitante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int?>("visitanteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("visitanteid");

                    b.ToTable("minVis");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Residente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numApartamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numParqueadero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("res");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoVehiculo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("veh");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Vigilante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("vig");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Visitante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numApartamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("vis");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaCorrespondencia", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Residente", "residente")
                        .WithMany()
                        .HasForeignKey("residenteid");

                    b.Navigation("residente");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoResidentes", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Residente", "residente")
                        .WithMany()
                        .HasForeignKey("residenteid");

                    b.HasOne("Minuta.App.Dominio.Vehiculo", "vehiculo")
                        .WithMany()
                        .HasForeignKey("vehiculoid");

                    b.Navigation("residente");

                    b.Navigation("vehiculo");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoVisitantes", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Vehiculo", "vehiculo")
                        .WithMany()
                        .HasForeignKey("vehiculoid");

                    b.HasOne("Minuta.App.Dominio.Visitante", "visitante")
                        .WithMany()
                        .HasForeignKey("visitanteid");

                    b.Navigation("vehiculo");

                    b.Navigation("visitante");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVisitante", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Visitante", "visitante")
                        .WithMany()
                        .HasForeignKey("visitanteid");

                    b.Navigation("visitante");
                });
#pragma warning restore 612, 618
        }
    }
}
