// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minuta.App.Persistencia;

namespace Minuta.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVigilancia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("minVig");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MinutaVigilancia");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("per");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("Minuta.App.Dominio.RolUsuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tipUsu");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoVehiculo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("veh");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaCorrespondencia", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.MinutaVigilancia");

                    b.Property<string>("firmaRecibido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MinutaCorrespondencia_observaciones");

                    b.Property<string>("personaEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personaRecibe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("residenteid")
                        .HasColumnType("int")
                        .HasColumnName("MinutaCorrespondencia_residenteid");

                    b.Property<string>("tipoCorrespondencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("residenteid");

                    b.HasDiscriminator().HasValue("MinutaCorrespondencia");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaEventos", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.MinutaVigilancia");

                    b.Property<string>("anotaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("MinutaEventos");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoResidentes", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.MinutaVigilancia");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("residenteid")
                        .HasColumnType("int");

                    b.Property<int?>("vehiculoResid")
                        .HasColumnType("int");

                    b.HasIndex("residenteid");

                    b.HasIndex("vehiculoResid");

                    b.HasDiscriminator().HasValue("MinutaVehiculoResidentes");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoVisitantes", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.MinutaVigilancia");

                    b.Property<DateTime>("fechaSalidaVehVis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaSalidaVehVis")
                        .HasColumnType("datetime2");

                    b.Property<string>("numParqueaderoVis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("vehiculoVisid")
                        .HasColumnType("int");

                    b.Property<int?>("visitanteid")
                        .HasColumnType("int");

                    b.HasIndex("vehiculoVisid");

                    b.HasIndex("visitanteid");

                    b.HasDiscriminator().HasValue("MinutaVehiculoVisitantes");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVisitante", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.MinutaVigilancia");

                    b.Property<DateTime>("fechaSalidaVis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaSalidaVis")
                        .HasColumnType("datetime2");

                    b.Property<int?>("visitanteid")
                        .HasColumnType("int")
                        .HasColumnName("MinutaVisitante_visitanteid");

                    b.HasIndex("visitanteid");

                    b.HasDiscriminator().HasValue("MinutaVisitante");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Usuario", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.Persona");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tipoid")
                        .HasColumnType("int");

                    b.HasIndex("tipoid");

                    b.HasDiscriminator().HasValue("Usuario");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Visitante", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.Persona");

                    b.Property<string>("numApartamentoVis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Visitante");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Administrador", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.Usuario");

                    b.Property<string>("celularAdm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correoAdm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Residente", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.Usuario");

                    b.Property<string>("celularRes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numApartamentoRes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numParqueaderoRes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Residente");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Vigilante", b =>
                {
                    b.HasBaseType("Minuta.App.Dominio.Usuario");

                    b.Property<string>("empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Vigilante");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaCorrespondencia", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Residente", "residente")
                        .WithMany()
                        .HasForeignKey("residenteid");

                    b.Navigation("residente");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoResidentes", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Residente", "residente")
                        .WithMany()
                        .HasForeignKey("residenteid");

                    b.HasOne("Minuta.App.Dominio.Vehiculo", "vehiculoRes")
                        .WithMany()
                        .HasForeignKey("vehiculoResid");

                    b.Navigation("residente");

                    b.Navigation("vehiculoRes");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVehiculoVisitantes", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Vehiculo", "vehiculoVis")
                        .WithMany()
                        .HasForeignKey("vehiculoVisid");

                    b.HasOne("Minuta.App.Dominio.Visitante", "visitante")
                        .WithMany()
                        .HasForeignKey("visitanteid");

                    b.Navigation("vehiculoVis");

                    b.Navigation("visitante");
                });

            modelBuilder.Entity("Minuta.App.Dominio.MinutaVisitante", b =>
                {
                    b.HasOne("Minuta.App.Dominio.Visitante", "visitante")
                        .WithMany()
                        .HasForeignKey("visitanteid");

                    b.Navigation("visitante");
                });

            modelBuilder.Entity("Minuta.App.Dominio.Usuario", b =>
                {
                    b.HasOne("Minuta.App.Dominio.RolUsuario", "tipo")
                        .WithMany()
                        .HasForeignKey("tipoid");

                    b.Navigation("tipo");
                });
#pragma warning restore 612, 618
        }
    }
}
